
**Instructions**
- Install the Requirements: pip install -r requirements.txt
- Then, make database migrations: python manage.py makemigrations
- python manage.py migrate
- And finally, run the application: python manage.py runserver

For Admin Account, please create one with superuser!





 you don't have to run all of these commands every time. Here's the typical workflow for pushing changes to a Git repository:

1. **Make your changes**: Modify files, add new files, or delete files in your project.

2. **Check the status** (optional): This is to check which files have been modified or added.

   ```bash
   git status
   ```

3. **Stage the changes**: Add the modified or new files to the staging area (so they can be committed).

   ```bash
   git add .
   ```

4. **Commit the changes**: This creates a snapshot of the changes you've made.

   ```bash
   git commit -m "Your commit message"
   ```

5. **Push the changes**: Finally, push the committed changes to the remote repository.

   ```bash
   git push origin main
   ```

**You only need to run the above commands** every time you want to save your changes to your local repository and then sync those changes with the remote repository (on GitHub or elsewhere).

---

To **simplify** this process for yourself, you can use the following sequence:

1. **Make your changes**.
2. **Run**:

   ```bash
   git add . && git commit -m "Your commit message" && git push origin main
   ```

   This will stage, commit, and push all in one line.

---

The `git add .` command adds all changed files. If you want to add specific files instead, you can use `git add <filename>` for individual files.

Let me know if you need more details or help with Git!
